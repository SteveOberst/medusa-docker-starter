name: Docker Compose Smoke Test
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  smoke:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create .env for compose
        shell: bash
        run: |
          cat > .env << 'EOF'
          # CI defaults for Docker Compose
          JWT_SECRET=supersecret
          COOKIE_SECRET=supersecret
          STORE_CORS=http://localhost:8000
          ADMIN_CORS=http://localhost:9000,http://localhost:3000
          AUTH_CORS=http://localhost:9000,http://localhost:3000
          NODE_ENV=development
          SEED_DB=false
          NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY=pk_test
          EOF

      - name: Free 9000/8000 if taken
        shell: bash
        run: |
          sudo fuser -k 9000/tcp || true
          sudo fuser -k 8000/tcp || true

      - name: Build and start stack
        run: |
          docker compose -f docker-compose.yml up -d --build

      - name: Wait for backend health
        shell: bash
        run: |
          for i in {1..60}; do
            code=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:9000/health || true)
            if [ "$code" = "200" ]; then echo "Backend healthy"; exit 0; fi
            sleep 5
          done
          echo "Backend health check failed"; docker compose logs medusa_backend; exit 1

      - name: Ping storefront root
        shell: bash
        run: |
          code=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8000 || true)
          if [ "$code" -lt 400 ]; then exit 0; fi
          echo "Storefront not responding"; docker compose logs medusa_storefront; exit 1

      - name: Dump service logs on failure
        if: failure()
        run: |
          docker compose ps || true
          docker compose logs --no-color || true

      - name: Tear down
        if: always()
        run: docker compose down -v || true
